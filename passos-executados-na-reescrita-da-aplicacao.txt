1° - criado projeto
2° - feito pasta para settings, contendo um arquivo settings para desenvolvimento, 
     um para produção e um para teste, além do settings geral na raiz.
3° - feito primeiro migrate
4° - criado superuser
5° - criado app gerenciaAula
6° - criado pasta que conterá um arquivo model para cada tabela do banco na aplicação gerenciaAula
7° - criado a model (tabela) Usuario e adicionada ao init.py de models
8° - Definido os níveis de usuários no init.py de models, onde:
     (1, 'Direção'),
     (2, 'Coordenação'),
     (3, 'Docente')
9° - Adicionado a model Usuario ao admin.py
10° - Definido superuser Admin à tabela Usuario como 'Direção'
11° - Criado um arquivo de model para cada tabela, sendo eles:
    - Aula
    - Coordenação (herda de usuário)
    - Direção (herda de usuário)
    - Disciplina
    - Docente (herda de usuário)
    - Habilidade
    - Turma
12° - Models importados no arquivo init.py de models e adicionados ao arquivo admin da aplicação gerenciaAula
13° - Criado pasta views que conterá um arquivo para cada view
14° - Criado pasta urls que conterá um arquivo para cada url
15° - Criado view e url para Index
16° - Adicionado a url no arquivo urls geral do projeto
17° - Criado view e url para Usuario
18° - Adicionado a url no arquivo urls geral do projeto
19° - Criado pasta templates no app gerenciaAula
20° - Adicionado o template base.html na pasta templates

* Cada template receberá uma pasta com seu nome na pasta templates, e dentro desta pasta conterá seu arquivo html

21° - Criado as views e urls restantes
22° - Adicionado as urls restantes no arquivo urls geral do projeto
23° - Reorganizado todas templates com os css necessários
24° - Refeito forma de fazer login retornando o nome do usuário para logar
25° - Documento para uso da aplicação
26° - Limitar criação de direção e coordenação com aval de direção
27° - Limitar criação de professor com aval de direção ou coordenação
28° - Página de edição do usuário (permitindo adicionar uma imagem)
29° - Configurar exibição da imagem do usuário logado
30° - Criado campo created_at em Aula para informar a data de criação da aula, pode ser editável e atualizado no campo também adicionado chamado updated_at
31° - Página para consultar aulas dadas
32° - Página para professor editar a aula
33° - Campo de busca de usuário pelo nome em caso de esquecimento do nome do usuário
34° - Colocado no PythonAniwhere
35° - Migrado para SQLite
36° - Adicionado ao GitHub Actions

==================================================================================

34° - Feito URL para Análise (renderizando gráfico)

PARA FAZER:

django
pythonanywhere
sqlite
git
ploty
dask
github actions
seaborn pyplot
https://github.com/marketplace/actions/reload-pythonanywhere-webapp

